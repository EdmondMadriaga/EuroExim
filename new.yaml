openapi: 3.0.0
info:
  title: EuroEximGaming Player Load
  version: 1.0.0
servers:
  - url: https://backend.euroeximgaming.com
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
paths:
  /api/v1/user/login/player:
    post:
      tags:
        - default
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
              example:
                username: player100
                password: player100
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
  /api/v1/bet/test:
    post:
      tags:
        - default
      summary: Add bet to a draw
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                drawIds:
                  type: array
                  items:
                    type: string
                numbers:
                  type: array
                  items:
                    type: integer
                amount:
                  type: number
              required:
                - drawIds
                - numbers
                - amount
              example:
                drawIds:
                  - 67b84d3f7710675843d87831
                numbers:
                  - 1
                  - 3
                  - 5
                  - 7
                  - 8
                  - 10
                amount: 25
      responses:
        '200':
          description: Bet placed successfully
          content:
            application/json:
              schema:
                type: object
  /api/v1/draw/{gameId}/{status}:
    get:
      tags:
        - default
      summary: Get bettable draws
      security:
        - bearerAuth: []
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
          example: OPEN
      responses:
        '200':
          description: List of available draws
          content:
            application/json:
              schema:
                type: object
  /api/v1/wallet/cash-out/test:
    post:
      tags:
        - default
      summary: Request cash-out
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
              required:
                - amount
              example:
                amount: 5
      responses:
        '200':
          description: Cash-out requested successfully
          content:
            application/json:
              schema:
                type: object
  /api/v1/wallet/cash-in/test:
    post:
      tags:
        - default
      summary: Request cash-in
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
              required:
                - amount
              example:
                amount: 15
      responses:
        '200':
          description: Cash-in requested successfully
          content:
            application/json:
              schema:
                type: object
  /api/v1/user/register:
    post:
      tags:
        - default
      summary: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                retypePassword:
                  type: string
                fullName:
                  type: string
                emailAddress:
                  type: string
                mobileNumber:
                  type: string
                avatarDataUrl:
                  type: string
                  format: uri
                ids:
                  type: array
                  items:
                    type: string
                gender:
                  type: string
                dob:
                  type: string
                  format: date
                roleId:
                  type: string
              required:
                - username
                - password
                - retypePassword
                - fullName
                - emailAddress
                - mobileNumber
                - gender
                - dob
                - roleId
              example:
                username: player100
                password: player100
                retypePassword: player100
                fullName: Player 100
                emailAddress: player100@gmail.com
                mobileNumber: '09123456789'
                avatarDataUrl: https://randomuser.me/api/portraits/men/45.jpg
                ids: []
                gender: male
                dob: 1995-01-01T00:00:00.000Z
                roleId: 602d2149e773f2a3990b47f5
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                type: object
  /api/v1/user/verify:
    post:
      tags:
        - default
      summary: Verify account with OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                otp:
                  type: string
              required:
                - otp
              example:
                otp: '1234'
      responses:
        '200':
          description: OTP verified successfully
          content:
            application/json:
              schema:
                type: object
  /api/v1/user:
    get:
      tags:
        - default
      summary: Get profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile fetched successfully
          content:
            application/json:
              schema:
                type: object
