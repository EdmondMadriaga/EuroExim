openapi: 3.0.0
info:
  title: EuroEximGaming Player Load
  description: Euroexmi Gaming
  version: 1.0.0
servers:
- url: https://edmondmadriaga.github.io/EuroExim/index
security:
- bearerAuth: []
paths:
  /api/v1/user/login/player:
    post:
      tags:
      - default
      summary: Login
      operationId: apiV1UserLoginPlayerPOST
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: player100
                password: player100
      responses:
        "100":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: Default
  /api/v1/bet/test:
    post:
      tags:
      - default
      summary: Add bet to a draw
      operationId: apiV1BetTestPOST
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                drawIds:
                - 67b84d3f7710675843d87831
                numbers:
                - 1
                - 3
                - 5
                - 7
                - 8
                - 10
                amount: 25
      responses:
        "100":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: Default
  /api/v1/draw/{gameId}/{status}:
    get:
      tags:
      - default
      summary: Get bettable draws
      operationId: apiV1DrawGameIdStatusGET
      parameters:
      - name: gameId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 679621bfa563f02c55d4ef3f
      - name: status
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: "OPEN,WAITING"
      responses:
        "100":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: Default
  /api/v1/wallet/cash-out/test:
    post:
      tags:
      - default
      summary: Request cash-out
      operationId: apiV1WalletCash_outTestPOST
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                amount: 5
      responses:
        "100":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: Default
  /api/v1/wallet/cash-in/test:
    post:
      tags:
      - default
      summary: Request cash-in
      operationId: apiV1WalletCash_inTestPOST
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                amount: 15
      responses:
        "100":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: Default
  /api/v1/user/register:
    post:
      tags:
      - default
      summary: Register
      operationId: apiV1UserRegisterPOST
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: player100
                password: player100
                retypePassword: player100
                fullName: Player 100
                emailAddress: player100@gmail.com
                mobileNumber: "09123456789"
                avatarDataUrl: https://randomuser.me/api/portraits/men/45.jpg
                ids: []
                gender: "GENDER"
                dob: "DOB"
                roleId: "ROLE_ID"
      responses:
        "100":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: Default
  /api/v1/user/verify:
    post:
      tags:
      - default
      summary: Verify account with OTP
      operationId: apiV1UserVerifyPOST
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                otp: "1234"
      responses:
        "100":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: Default
  /api/v1/user:
    get:
      tags:
      - default
      summary: Get profile
      operationId: apiV1UserGET
      responses:
        "100":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: Default
components:
  schemas: {}
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
